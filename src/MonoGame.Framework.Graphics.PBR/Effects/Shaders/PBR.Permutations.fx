//-----------------------------------------------------
//         Autogenerated code - DO NOT EDIT -
//           Edit Permutations.tt and save.
//-----------------------------------------------------

#include "PBR.fx"
#include "VertexShaders.fx"

float4 PsNormals(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, false
	, false
	, false
	);
}

float4 PsTangents(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, false
	, false
	, false
	);
}

float4 PsNormalsPrimary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, false
	, false
	, false
	);
}

float4 PsTangentsPrimary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, false
	, false
	, false
	);
}

float4 PsNormalsSecondary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, true
	, false
	, false
	);
}

float4 PsTangentsSecondary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, true
	, false
	, false
	);
}

float4 PsNormalsPrimarySecondary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, true
	, false
	, false
	);
}

float4 PsTangentsPrimarySecondary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, true
	, false
	, false
	);
}

float4 PsNormalsEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, false
	, true
	, false
	);
}

float4 PsTangentsEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, false
	, true
	, false
	);
}

float4 PsNormalsPrimaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, false
	, true
	, false
	);
}

float4 PsTangentsPrimaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, false
	, true
	, false
	);
}

float4 PsNormalsSecondaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, true
	, true
	, false
	);
}

float4 PsTangentsSecondaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, true
	, true
	, false
	);
}

float4 PsNormalsPrimarySecondaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, true
	, true
	, false
	);
}

float4 PsTangentsPrimarySecondaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, true
	, true
	, false
	);
}

float4 PsNormalsOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, false
	, false
	, true
	);
}

float4 PsTangentsOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, false
	, false
	, true
	);
}

float4 PsNormalsPrimaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, false
	, false
	, true
	);
}

float4 PsTangentsPrimaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, false
	, false
	, true
	);
}

float4 PsNormalsSecondaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, true
	, false
	, true
	);
}

float4 PsTangentsSecondaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, true
	, false
	, true
	);
}

float4 PsNormalsPrimarySecondaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, true
	, false
	, true
	);
}

float4 PsTangentsPrimarySecondaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, true
	, false
	, true
	);
}

float4 PsNormalsEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, false
	, true
	, true
	);
}

float4 PsTangentsEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, false
	, true
	, true
	);
}

float4 PsNormalsPrimaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, false
	, true
	, true
	);
}

float4 PsTangentsPrimaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, false
	, true
	, true
	);
}

float4 PsNormalsSecondaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, false
	, true
	, true
	, true
	);
}

float4 PsTangentsSecondaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, false
	, true
	, true
	, true
	);
}

float4 PsNormalsPrimarySecondaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, false
	, true
	, true
	, true
	, true
	);
}

float4 PsTangentsPrimarySecondaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input
	, true
	, true
	, true
	, true
	, true
	);
}

TECHNIQUE(VsRigidPsNormals, VsRigid, PsNormals );

TECHNIQUE(VsSkinnedPsNormals, VsSkinned, PsNormals );

TECHNIQUE(VsRigidPsNormals, VsRigid, PsNormals );

TECHNIQUE(VsSkinnedPsNormals, VsSkinned, PsNormals );

TECHNIQUE(VsRigidBasisPsTangents, VsRigidBasis, PsTangents );

TECHNIQUE(VsSkinnedBasisPsTangents, VsSkinnedBasis, PsTangents );

TECHNIQUE(VsRigidBasisPsTangents, VsRigidBasis, PsTangents );

TECHNIQUE(VsSkinnedBasisPsTangents, VsSkinnedBasis, PsTangents );

TECHNIQUE(VsRigidPsNormalsPrimary, VsRigid, PsNormalsPrimary );

TECHNIQUE(VsSkinnedPsNormalsPrimary, VsSkinned, PsNormalsPrimary );

TECHNIQUE(VsRigidPsNormalsPrimary, VsRigid, PsNormalsPrimary );

TECHNIQUE(VsSkinnedPsNormalsPrimary, VsSkinned, PsNormalsPrimary );

TECHNIQUE(VsRigidBasisPsTangentsPrimary, VsRigidBasis, PsTangentsPrimary );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimary, VsSkinnedBasis, PsTangentsPrimary );

TECHNIQUE(VsRigidBasisPsTangentsPrimary, VsRigidBasis, PsTangentsPrimary );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimary, VsSkinnedBasis, PsTangentsPrimary );

TECHNIQUE(VsRigidPsNormalsSecondary, VsRigid, PsNormalsSecondary );

TECHNIQUE(VsSkinnedPsNormalsSecondary, VsSkinned, PsNormalsSecondary );

TECHNIQUE(VsRigidPsNormalsSecondary, VsRigid, PsNormalsSecondary );

TECHNIQUE(VsSkinnedPsNormalsSecondary, VsSkinned, PsNormalsSecondary );

TECHNIQUE(VsRigidBasisPsTangentsSecondary, VsRigidBasis, PsTangentsSecondary );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondary, VsSkinnedBasis, PsTangentsSecondary );

TECHNIQUE(VsRigidBasisPsTangentsSecondary, VsRigidBasis, PsTangentsSecondary );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondary, VsSkinnedBasis, PsTangentsSecondary );

TECHNIQUE(VsRigidPsNormalsPrimarySecondary, VsRigid, PsNormalsPrimarySecondary );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondary, VsSkinned, PsNormalsPrimarySecondary );

TECHNIQUE(VsRigidPsNormalsPrimarySecondary, VsRigid, PsNormalsPrimarySecondary );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondary, VsSkinned, PsNormalsPrimarySecondary );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondary, VsRigidBasis, PsTangentsPrimarySecondary );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondary, VsSkinnedBasis, PsTangentsPrimarySecondary );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondary, VsRigidBasis, PsTangentsPrimarySecondary );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondary, VsSkinnedBasis, PsTangentsPrimarySecondary );

TECHNIQUE(VsRigidPsNormalsEmissive, VsRigid, PsNormalsEmissive );

TECHNIQUE(VsSkinnedPsNormalsEmissive, VsSkinned, PsNormalsEmissive );

TECHNIQUE(VsRigidPsNormalsEmissive, VsRigid, PsNormalsEmissive );

TECHNIQUE(VsSkinnedPsNormalsEmissive, VsSkinned, PsNormalsEmissive );

TECHNIQUE(VsRigidBasisPsTangentsEmissive, VsRigidBasis, PsTangentsEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsEmissive, VsSkinnedBasis, PsTangentsEmissive );

TECHNIQUE(VsRigidBasisPsTangentsEmissive, VsRigidBasis, PsTangentsEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsEmissive, VsSkinnedBasis, PsTangentsEmissive );

TECHNIQUE(VsRigidPsNormalsPrimaryEmissive, VsRigid, PsNormalsPrimaryEmissive );

TECHNIQUE(VsSkinnedPsNormalsPrimaryEmissive, VsSkinned, PsNormalsPrimaryEmissive );

TECHNIQUE(VsRigidPsNormalsPrimaryEmissive, VsRigid, PsNormalsPrimaryEmissive );

TECHNIQUE(VsSkinnedPsNormalsPrimaryEmissive, VsSkinned, PsNormalsPrimaryEmissive );

TECHNIQUE(VsRigidBasisPsTangentsPrimaryEmissive, VsRigidBasis, PsTangentsPrimaryEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimaryEmissive, VsSkinnedBasis, PsTangentsPrimaryEmissive );

TECHNIQUE(VsRigidBasisPsTangentsPrimaryEmissive, VsRigidBasis, PsTangentsPrimaryEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimaryEmissive, VsSkinnedBasis, PsTangentsPrimaryEmissive );

TECHNIQUE(VsRigidPsNormalsSecondaryEmissive, VsRigid, PsNormalsSecondaryEmissive );

TECHNIQUE(VsSkinnedPsNormalsSecondaryEmissive, VsSkinned, PsNormalsSecondaryEmissive );

TECHNIQUE(VsRigidPsNormalsSecondaryEmissive, VsRigid, PsNormalsSecondaryEmissive );

TECHNIQUE(VsSkinnedPsNormalsSecondaryEmissive, VsSkinned, PsNormalsSecondaryEmissive );

TECHNIQUE(VsRigidBasisPsTangentsSecondaryEmissive, VsRigidBasis, PsTangentsSecondaryEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondaryEmissive, VsSkinnedBasis, PsTangentsSecondaryEmissive );

TECHNIQUE(VsRigidBasisPsTangentsSecondaryEmissive, VsRigidBasis, PsTangentsSecondaryEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondaryEmissive, VsSkinnedBasis, PsTangentsSecondaryEmissive );

TECHNIQUE(VsRigidPsNormalsPrimarySecondaryEmissive, VsRigid, PsNormalsPrimarySecondaryEmissive );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondaryEmissive, VsSkinned, PsNormalsPrimarySecondaryEmissive );

TECHNIQUE(VsRigidPsNormalsPrimarySecondaryEmissive, VsRigid, PsNormalsPrimarySecondaryEmissive );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondaryEmissive, VsSkinned, PsNormalsPrimarySecondaryEmissive );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondaryEmissive, VsRigidBasis, PsTangentsPrimarySecondaryEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondaryEmissive, VsSkinnedBasis, PsTangentsPrimarySecondaryEmissive );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondaryEmissive, VsRigidBasis, PsTangentsPrimarySecondaryEmissive );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondaryEmissive, VsSkinnedBasis, PsTangentsPrimarySecondaryEmissive );

TECHNIQUE(VsRigidPsNormalsOpacity, VsRigid, PsNormalsOpacity );

TECHNIQUE(VsSkinnedPsNormalsOpacity, VsSkinned, PsNormalsOpacity );

TECHNIQUE(VsRigidPsNormalsOpacity, VsRigid, PsNormalsOpacity );

TECHNIQUE(VsSkinnedPsNormalsOpacity, VsSkinned, PsNormalsOpacity );

TECHNIQUE(VsRigidBasisPsTangentsOpacity, VsRigidBasis, PsTangentsOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsOpacity, VsSkinnedBasis, PsTangentsOpacity );

TECHNIQUE(VsRigidBasisPsTangentsOpacity, VsRigidBasis, PsTangentsOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsOpacity, VsSkinnedBasis, PsTangentsOpacity );

TECHNIQUE(VsRigidPsNormalsPrimaryOpacity, VsRigid, PsNormalsPrimaryOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimaryOpacity, VsSkinned, PsNormalsPrimaryOpacity );

TECHNIQUE(VsRigidPsNormalsPrimaryOpacity, VsRigid, PsNormalsPrimaryOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimaryOpacity, VsSkinned, PsNormalsPrimaryOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimaryOpacity, VsRigidBasis, PsTangentsPrimaryOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimaryOpacity, VsSkinnedBasis, PsTangentsPrimaryOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimaryOpacity, VsRigidBasis, PsTangentsPrimaryOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimaryOpacity, VsSkinnedBasis, PsTangentsPrimaryOpacity );

TECHNIQUE(VsRigidPsNormalsSecondaryOpacity, VsRigid, PsNormalsSecondaryOpacity );

TECHNIQUE(VsSkinnedPsNormalsSecondaryOpacity, VsSkinned, PsNormalsSecondaryOpacity );

TECHNIQUE(VsRigidPsNormalsSecondaryOpacity, VsRigid, PsNormalsSecondaryOpacity );

TECHNIQUE(VsSkinnedPsNormalsSecondaryOpacity, VsSkinned, PsNormalsSecondaryOpacity );

TECHNIQUE(VsRigidBasisPsTangentsSecondaryOpacity, VsRigidBasis, PsTangentsSecondaryOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondaryOpacity, VsSkinnedBasis, PsTangentsSecondaryOpacity );

TECHNIQUE(VsRigidBasisPsTangentsSecondaryOpacity, VsRigidBasis, PsTangentsSecondaryOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondaryOpacity, VsSkinnedBasis, PsTangentsSecondaryOpacity );

TECHNIQUE(VsRigidPsNormalsPrimarySecondaryOpacity, VsRigid, PsNormalsPrimarySecondaryOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondaryOpacity, VsSkinned, PsNormalsPrimarySecondaryOpacity );

TECHNIQUE(VsRigidPsNormalsPrimarySecondaryOpacity, VsRigid, PsNormalsPrimarySecondaryOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondaryOpacity, VsSkinned, PsNormalsPrimarySecondaryOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondaryOpacity, VsRigidBasis, PsTangentsPrimarySecondaryOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondaryOpacity, VsSkinnedBasis, PsTangentsPrimarySecondaryOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondaryOpacity, VsRigidBasis, PsTangentsPrimarySecondaryOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondaryOpacity, VsSkinnedBasis, PsTangentsPrimarySecondaryOpacity );

TECHNIQUE(VsRigidPsNormalsEmissiveOpacity, VsRigid, PsNormalsEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsEmissiveOpacity, VsSkinned, PsNormalsEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsEmissiveOpacity, VsRigid, PsNormalsEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsEmissiveOpacity, VsSkinned, PsNormalsEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsEmissiveOpacity, VsRigidBasis, PsTangentsEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsEmissiveOpacity, VsSkinnedBasis, PsTangentsEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsEmissiveOpacity, VsRigidBasis, PsTangentsEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsEmissiveOpacity, VsSkinnedBasis, PsTangentsEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsPrimaryEmissiveOpacity, VsRigid, PsNormalsPrimaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimaryEmissiveOpacity, VsSkinned, PsNormalsPrimaryEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsPrimaryEmissiveOpacity, VsRigid, PsNormalsPrimaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimaryEmissiveOpacity, VsSkinned, PsNormalsPrimaryEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimaryEmissiveOpacity, VsRigidBasis, PsTangentsPrimaryEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimaryEmissiveOpacity, VsSkinnedBasis, PsTangentsPrimaryEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimaryEmissiveOpacity, VsRigidBasis, PsTangentsPrimaryEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimaryEmissiveOpacity, VsSkinnedBasis, PsTangentsPrimaryEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsSecondaryEmissiveOpacity, VsRigid, PsNormalsSecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsSecondaryEmissiveOpacity, VsSkinned, PsNormalsSecondaryEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsSecondaryEmissiveOpacity, VsRigid, PsNormalsSecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsSecondaryEmissiveOpacity, VsSkinned, PsNormalsSecondaryEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsSecondaryEmissiveOpacity, VsRigidBasis, PsTangentsSecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondaryEmissiveOpacity, VsSkinnedBasis, PsTangentsSecondaryEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsSecondaryEmissiveOpacity, VsRigidBasis, PsTangentsSecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsSecondaryEmissiveOpacity, VsSkinnedBasis, PsTangentsSecondaryEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsPrimarySecondaryEmissiveOpacity, VsRigid, PsNormalsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondaryEmissiveOpacity, VsSkinned, PsNormalsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsRigidPsNormalsPrimarySecondaryEmissiveOpacity, VsRigid, PsNormalsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsNormalsPrimarySecondaryEmissiveOpacity, VsSkinned, PsNormalsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondaryEmissiveOpacity, VsRigidBasis, PsTangentsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondaryEmissiveOpacity, VsSkinnedBasis, PsTangentsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsRigidBasisPsTangentsPrimarySecondaryEmissiveOpacity, VsRigidBasis, PsTangentsPrimarySecondaryEmissiveOpacity );

TECHNIQUE(VsSkinnedBasisPsTangentsPrimarySecondaryEmissiveOpacity, VsSkinnedBasis, PsTangentsPrimarySecondaryEmissiveOpacity );

