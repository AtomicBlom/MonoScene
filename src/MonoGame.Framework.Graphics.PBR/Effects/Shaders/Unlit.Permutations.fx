//-----------------------------------------------------
//         Autogenerated code - DO NOT EDIT -
//           Edit Permutations.tt and save.
//-----------------------------------------------------

#include "Unlit.fx"
#include "VertexShaders.fx"

float4 Ps(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, false	
	, false
	, false
	);
}

float4 PsPrimary(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, true	
	, false
	, false
	);
}

float4 PsEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, false	
	, true
	, false
	);
}

float4 PsPrimaryEmissive(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, true	
	, true
	, false
	);
}

float4 PsOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, false	
	, false
	, true
	);
}

float4 PsPrimaryOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, true	
	, false
	, true
	);
}

float4 PsEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, false	
	, true
	, true
	);
}

float4 PsPrimaryEmissiveOpacity(VsOutTexNorm input) : COLOR0
{
	return PsShader(input	
	, true	
	, true
	, true
	);
}

TECHNIQUE(VsRigidPs, VsRigid, Ps );

TECHNIQUE(VsSkinnedPs, VsSkinned, Ps );

TECHNIQUE(VsRigidPs, VsRigid, Ps );

TECHNIQUE(VsSkinnedPs, VsSkinned, Ps );

TECHNIQUE(VsRigidPsPrimary, VsRigid, PsPrimary );

TECHNIQUE(VsSkinnedPsPrimary, VsSkinned, PsPrimary );

TECHNIQUE(VsRigidPsPrimary, VsRigid, PsPrimary );

TECHNIQUE(VsSkinnedPsPrimary, VsSkinned, PsPrimary );

TECHNIQUE(VsRigidPsEmissive, VsRigid, PsEmissive );

TECHNIQUE(VsSkinnedPsEmissive, VsSkinned, PsEmissive );

TECHNIQUE(VsRigidPsEmissive, VsRigid, PsEmissive );

TECHNIQUE(VsSkinnedPsEmissive, VsSkinned, PsEmissive );

TECHNIQUE(VsRigidPsPrimaryEmissive, VsRigid, PsPrimaryEmissive );

TECHNIQUE(VsSkinnedPsPrimaryEmissive, VsSkinned, PsPrimaryEmissive );

TECHNIQUE(VsRigidPsPrimaryEmissive, VsRigid, PsPrimaryEmissive );

TECHNIQUE(VsSkinnedPsPrimaryEmissive, VsSkinned, PsPrimaryEmissive );

TECHNIQUE(VsRigidPsOpacity, VsRigid, PsOpacity );

TECHNIQUE(VsSkinnedPsOpacity, VsSkinned, PsOpacity );

TECHNIQUE(VsRigidPsOpacity, VsRigid, PsOpacity );

TECHNIQUE(VsSkinnedPsOpacity, VsSkinned, PsOpacity );

TECHNIQUE(VsRigidPsPrimaryOpacity, VsRigid, PsPrimaryOpacity );

TECHNIQUE(VsSkinnedPsPrimaryOpacity, VsSkinned, PsPrimaryOpacity );

TECHNIQUE(VsRigidPsPrimaryOpacity, VsRigid, PsPrimaryOpacity );

TECHNIQUE(VsSkinnedPsPrimaryOpacity, VsSkinned, PsPrimaryOpacity );

TECHNIQUE(VsRigidPsEmissiveOpacity, VsRigid, PsEmissiveOpacity );

TECHNIQUE(VsSkinnedPsEmissiveOpacity, VsSkinned, PsEmissiveOpacity );

TECHNIQUE(VsRigidPsEmissiveOpacity, VsRigid, PsEmissiveOpacity );

TECHNIQUE(VsSkinnedPsEmissiveOpacity, VsSkinned, PsEmissiveOpacity );

TECHNIQUE(VsRigidPsPrimaryEmissiveOpacity, VsRigid, PsPrimaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsPrimaryEmissiveOpacity, VsSkinned, PsPrimaryEmissiveOpacity );

TECHNIQUE(VsRigidPsPrimaryEmissiveOpacity, VsRigid, PsPrimaryEmissiveOpacity );

TECHNIQUE(VsSkinnedPsPrimaryEmissiveOpacity, VsSkinned, PsPrimaryEmissiveOpacity );

